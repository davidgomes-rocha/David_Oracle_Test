1. Primary key definition and any other constraint or index suggestion

-- Primary Keys

Definition:
To ensure data integrity and optimize queries, we define primary keys (PK) and indexes. The PK uniquely identifies each row, while indexes speed up searches.

SQL Implementation:
ALTER TABLE item ADD CONSTRAINT pk_item PRIMARY KEY (item);
ALTER TABLE loc ADD CONSTRAINT pk_loc PRIMARY KEY (loc);
ALTER TABLE item_loc_soh ADD CONSTRAINT pk_item_loc_soh PRIMARY KEY (item, loc);

Explanation:
Primary Key for item:
-pk_item (item) ensures that each item in the catalog is unique.
-Without this, duplicate item IDs could exist, leading to inconsistent product references.

Primary Key for loc
-pk_loc (loc) ensures that each location (store/warehouse) is uniquely identified.
-Prevents duplicate store/warehouse records.

Primary Key for item_loc_soh
-pk_item_loc_soh (item, loc) ensures that each item appears only once per location.
-This prevents stock duplication for the same item at the same loc.
-dept is not included because it is an attribute of item, not a unique identifier.

Extra:
-dept does not define uniqueness because multiple items can belong to the same dept at the same loc.
-The real uniqueness constraint is item + loc → A product in a store should not have two separate stock records.
-Instead of adding dept to the PK, we create an index on dept for better search performance:
CREATE INDEX idx_item_loc_soh_dept ON item_loc_soh (dept)
-query to verify that (item, loc) is unique in your data:
SELECT item, loc, COUNT(*) AS duplicate_count
FROM item_loc_soh
GROUP BY item, loc
HAVING COUNT(*) > 1;



-- Foreign Keys

Definition:
A foreign key (FK) is a database constraint that ensures referential integrity by enforcing a relationship between two tables. It ensures that a column in one table (child table) references a valid primary key in another table (parent table).

SQL Implementation:
ALTER TABLE item_loc_soh ADD CONSTRAINT fk_item FOREIGN KEY (item) REFERENCES item(item);
ALTER TABLE item_loc_soh ADD CONSTRAINT fk_loc FOREIGN KEY (loc) REFERENCES loc(loc);

Explanation:
fk_item ensures that item in item_loc_soh exists in item → Prevents orphan records.
fk_loc ensures that loc in item_loc_soh exists in loc → Ensures stock is only assigned to valid locations.

-- Indexes

Definition:
An index is a database structure that improves query performance by allowing faster data lookups. Instead of scanning the entire table, indexes provide a structured way to access data efficiently.

SQL Implementation:
CREATE INDEX idx_item_loc_soh_dept ON item_loc_soh (dept);
CREATE INDEX idx_item_loc_soh_loc ON item_loc_soh (loc);

Explanation:
Index on dept (idx_item_loc_soh_dept):
-The test specifies that most store/warehouse users search by dept.
-Without an index, searching by dept would require a full table scan, which is slow for large datasets.
-This index allows quick filtering of item_loc_soh records by dept.

Index on loc (idx_item_loc_soh_loc):
-Many queries will filter data by location (warehouse/store).
-This index improves performance when users filter stock data by loc.

